SET search_path TO "progetto";

CREATE TABLE Universita
(
Nome		VARCHAR      PRIMARY KEY,
Descrizione	VARCHAR      NOT NULL,
Logo		VARCHAR      NOT NULL,
Indirizzo	VARCHAR(30)  NOT NULL,
Link		VARCHAR(30)  NOT NULL
);

CREATE TABLE Corso
(
Id			VARCHAR(10)  PRIMARY KEY,
Titolo			VARCHAR(30)  NOT NULL,
Descrizione		VARCHAR      NOT NULL,
Soglia			NUMERIC(2,0) NOT NULL ,
Sommario		VARCHAR(50)  NOT NULL,
Lingua			VARCHAR(10)  NOT NULL DEFAULT 'Italiano',
Prerequisiti		VARCHAR      NOT NULL, 
Letture			VARCHAR      DEFAULT '',
Modalità		CHAR	     NOT NULL DEFAULT 'T',
Universita		VARCHAR(40)  NOT NULL, 
UNIQUE(Titolo, Universita),
FOREIGN KEY (Universita) REFERENCES Universita(Nome) ON UPDATE CASCADE ON DELETE RESTRICT,
CHECK (Soglia>0 AND Soglia<=30)
);

CREATE TABLE Categoria
(
Nome		VARCHAR(30) PRIMARY KEY
);
CREATE TABLE Appartiene
(
Corso		VARCHAR(10) NOT NULL,
Categoria	VARCHAR(30) NOT NULL,
FOREIGN KEY (Corso) REFERENCES Corso(Id) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY (Categoria) REFERENCES Categoria(Nome) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Materiale
(
Id		VARCHAR(10)   PRIMARY KEY,
Titolo		VARCHAR(40)  NOT NULL,
Durata		NUMERIC(4,2) NOT NULL,
Tipo		CHAR 	     NOT NULL,
Argomento	VARCHAR(20),
Sottotitoli	BOOLEAN      DEFAULT FALSE,
Lingua		VARCHAR(10)  NOT NULL DEFAULT 'Italiano',
Corso		VARCHAR(10)  NOT NULL,
Descrizione	VARCHAR      NOT NULL,
UNIQUE(Corso, Titolo),
FOREIGN KEY (Corso) REFERENCES Corso(Id) ON UPDATE CASCADE ON DELETE RESTRICT,
CHECK (Durata>0)
);

CREATE TABLE Edizione
(
NumeroEd	NUMERIC(2,0) NOT NULL CHECK (NumeroEd >0),
Corso		VARCHAR(10) NOT NULL, 
DataIn		DATE,
Durata		NUMERIC(2,0) NOT NULL CHECK (Durata>0),
Ore			NUMERIC(2,0) NOT NULL CHECK (Ore>0),
PRIMARY KEY (NumeroEd, Corso),
FOREIGN KEY(Corso) REFERENCES Corso(Id) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Attivita
(
Id		VARCHAR(5) PRIMARY KEY,
DataIn		DATE NOT NULL,
DataF		DATE NOT NULL,
Edizione	NUMERIC(2,0) NOT NULL,
Corso		VARCHAR(10) NOT NULL,
UNIQUE(Edizione, Corso, DataIn),
FOREIGN KEY (Edizione, Corso) REFERENCES Edizione(NumeroEd, Corso) ON UPDATE CASCADE ON DELETE RESTRICT,
CHECK (DataIn<DataF)
);

CREATE TABLE Utente
(
Email		VARCHAR(30) PRIMARY KEY,
Nome		VARCHAR(30) NOT NULL,
Cognome		VARCHAR(30) NOT NULL,
Ruolo		VARCHAR(20) NOT NULL,
WL			VARCHAR(50) DEFAULT ' '
);

CREATE TABLE Docente
(
Email			VARCHAR(30) NOT NULL,
Ruolo			VARCHAR(15) NOT NULL,
Affiliazione	VARCHAR(30) NOT NULL,
Universita		VARCHAR(40) NOT NULL,
Foto			VARCHAR(20) NOT NULL,
CV				VARCHAR		NOT NULL,
PRIMARY KEY (Email),
FOREIGN KEY (Email) REFERENCES Utente(Email) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY (Universita) REFERENCES Universita(Nome) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Forum
(
Corso		VARCHAR(10)  NOT NULL,
Tipo		NUMERIC(1,0) NOT NULL CHECK(Tipo<=5),
Chiuso		BOOLEAN      DEFAULT FALSE NOT NULL,
PRIMARY KEY (Corso, Tipo),
FOREIGN KEY (Corso) REFERENCES Corso(Id) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Thread
(
Id			VARCHAR(3)PRIMARY KEY,
Chiuso		BOOLEAN DEFAULT FALSE NOT NULL,
Forum		NUMERIC(1,0) NOT NULL,
Corso		VARCHAR(10) NOT NULL,
Utente		VARCHAR(30) NOT NULL,
FOREIGN KEY (Forum, Corso) REFERENCES Forum(Tipo, Corso) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY(Utente) REFERENCES Utente(Email) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Messaggi
(
Id			VARCHAR(4) PRIMARY KEY,
Thread		VARCHAR(3) NOT NULL,
Testo		VARCHAR    NOT NULL,
Risposta	VARCHAR(4),
Utente		VARCHAR(30) NOT NULL,
FOREIGN KEY (Thread) REFERENCES Thread(Id) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY(Risposta) REFERENCES Messaggi(Id) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY(Utente) REFERENCES Utente(Email) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Profilo
(
Utente			VARCHAR(30) NOT NULL,
Genere			CHAR,
Foto			VARCHAR(10),
Descrizione		VARCHAR,
Località		VARCHAR(30),
DataN			DATE,
WebP			VARCHAR,
PRIMARY KEY(Utente),
FOREIGN KEY (Utente) REFERENCES Utente(Email) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Social
(
Nome		VARCHAR(50) PRIMARY KEY
);

CREATE TABLE Link
(
Social		VARCHAR(50) NOT NULL,
Utente		VARCHAR(30) NOT NULL,
PRIMARY KEY(Social, Utente),
FOREIGN KEY (Social) REFERENCES Social(Nome) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY (Utente) REFERENCES Utente(Email) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Assignment
(
Id			VARCHAR(5) PRIMARY KEY,
Attivita	VARCHAR(5),
Consegna	TIMESTAMP NOT NULL,
HDL			TIMESTAMP,
Tipo		CHAR  NOT NULL,
Edizione	NUMERIC(2,0) NOT NULL,
Corso		VARCHAR(10) NOT NULL,
Soglia		NUMERIC(2,0) NOT NULL,
Peer		BOOLEAN DEFAULT FALSE NOT NULL,
FOREIGN KEY(Edizione, Corso) REFERENCES Edizione(NumeroEd, Corso) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY(Attivita) REFERENCES Attivita(Id) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Domande
(
Assignment	VARCHAR(5) NOT NULL,
IdDomanda	VARCHAR(5) NOT NULL,
Testo		VARCHAR    NOT NULL,
PRIMARY KEY(Assignment, IdDomanda),
FOREIGN KEY(Assignment) REFERENCES Assignment(Id) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Risposte
(
Assignment	VARCHAR(5) NOT NULL,
Domanda		VARCHAR(5) NOT NULL,
IdRisposta	VARCHAR(5) NOT NULL,
Punti		NUMERIC (2,0) DEFAULT 0 NOT NULL CHECK(Punti>=0),
Testo		VARCHAR   NOT NULL,
PRIMARY KEY(Assignment, Domanda, IdRisposta),
FOREIGN KEY (Assignment, Domanda) REFERENCES Domande(Assignment, IdDomanda) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Consegna
(
Voto		NUMERIC(2,0) NOT NULL,
DataC		TIMESTAMP NOT NULL,
Utente		VARCHAR(30) NOT NULL,
Assignment	VARCHAR(5) NOT NULL,
Penalizzato	BOOLEAN DEFAULT FALSE NOT NULL,
PRIMARY KEY(DataC, Utente, Assignment),
FOREIGN KEY (Utente) REFERENCES Utente(Email) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY (Assignment) REFERENCES Assignment(Id) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Scelta
(
Utente		VARCHAR(30) NOT NULL,
Risposta	VARCHAR(5) NOT NULL,
DataS		TIMESTAMP NOT NULL,
Domanda		VARCHAR(5) NOT NULL,
Quiz		VARCHAR(5) NOT NULL,
Penalizzazione BOOLEAN DEFAULT FALSE NOT NULL,
PRIMARY KEY(Utente, Quiz, Domanda, Risposta, DataS),
FOREIGN KEY (Utente) REFERENCES Utente(Email) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY (Risposta, Domanda, Quiz) REFERENCES Risposte(IdRisposta, Domanda, Assignment) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Peer 
(
Elaborato	VARCHAR(5) NOT NULL,
Esecutore	VARCHAR(30) NOT NULL,
DataEs		TIMESTAMP NOT NULL,
Studente	VARCHAR(30) NOT NULL,
Docente		VARCHAR(30) NOT NULL,
DataAss		TIMESTAMP NOT NULL,
Voto		NUMERIC (2,0) NOT NULL CHECK(Voto>0 AND Voto<=30),
Peso 		NUMERIC(3,2) NOT NULL CHECK(Peso>0 AND Peso<=1.00),
DataV		TIMESTAMP NOT NULL,
PRIMARY KEY(Elaborato, Esecutore, DataEs, Studente, Docente),
FOREIGN KEY (Studente) REFERENCES Utente(Email) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY (Docente) REFERENCES Docente(Email) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY(Elaborato, Esecutore, DataEs) REFERENCES Consegna(Assignment, Utente, DataC) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Insegna
(
Docente		VARCHAR(30) NOT NULL,
Corso		VARCHAR(10) NOT NULL,
PRIMARY KEY(Docente, Corso),
FOREIGN KEY (Docente) REFERENCES Docente(Email) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY (Corso) REFERENCES Corso(Id) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Visionato
(
Video		VARCHAR(10) NOT NULL,
Utente		VARCHAR(30) NOT NULL,
PRIMARY KEY(Video, Utente),
FOREIGN KEY (Video) REFERENCES Materiale(Id) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY (Utente) REFERENCES Utente(Email) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE Iscritto 
(
Utente		VARCHAR(30) NOT NULL,
Corso		VARCHAR(10) NOT NULL,
Edizione	NUMERIC(2,0) NOT NULL,
Superato	BOOLEAN DEFAULT FALSE NOT NULL,
DataIscr	DATE NOT NULL,
PRIMARY KEY(Utente, Corso, Edizione),
FOREIGN KEY(Utente) REFERENCES Utente(Email) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY(Edizione, Corso) REFERENCES Edizione(NumeroEd, Corso) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE HaSuperato (
Utente		VARCHAR(30) NOT NULL,
Esercizio	VARCHAR(5) NOT NULL,
Voto		NUMERIC(2,0) NOT NULL CHECK(Voto>0 AND Voto<=30),
PRIMARY KEY(Utente, Esercizio),
FOREIGN KEY(Utente) REFERENCES Utente(Email) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY(Esercizio) REFERENCES Assignment(Id) ON UPDATE CASCADE ON DELETE RESTRICT
);


CREATE TABLE Prevede (
Materiale	VARCHAR(10) NOT NULL,
Attivita	VARCHAR(5) NOT NULL,
PRIMARY KEY(Materiale, Attivita),
FOREIGN KEY(Materiale) REFERENCES Materiale(Id) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY(Attivita) REFERENCES Attivita(Id) ON UPDATE CASCADE ON DELETE RESTRICT
);



